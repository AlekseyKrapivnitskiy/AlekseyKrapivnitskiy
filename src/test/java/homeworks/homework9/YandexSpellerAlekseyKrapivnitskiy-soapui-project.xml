<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="9a25f6df-99f0-42a6-8cc6-ccd6772b976f" activeEnvironment="Default" name="YandexSpellerAlekseyKrapivnitskiy" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="OptionsTests"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="IgnoreDigitsTest"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="adabc0ea-0775-4bf1-81f6-cafd2fb7159a" wsaVersion="NONE" name="SpellServiceSoap" type="wsdl" bindingName="{http://speller.yandex.net/services/spellservice}SpellServiceSoap" soapVersion="1_1" anonymous="optional" definition="file:/C:/Users/alex/Downloads/spellservice.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/alex/Downloads/spellservice.xml"><con:part><con:url>file:/C:/Users/alex/Downloads/spellservice.xml</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://speller.yandex.net/services/spellservice" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://speller.yandex.net/services/spellservice" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://speller.yandex.net/services/spellservice">
      <s:element name="CheckTextRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="text" type="s:string"/>
          </s:sequence>
          <s:attribute name="lang" type="s:string"/>
          <s:attribute name="options" type="s:int" use="optional" default="0"/>
          <s:attribute name="format" type="s:string" use="optional" default=""/>
        </s:complexType>
      </s:element>
      <s:element name="CheckTextResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SpellResult" type="tns:SpellResult"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="SpellResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="error" type="tns:SpellError"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="SpellError">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="word" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="unbounded" name="s" type="s:string"/>
        </s:sequence>
        <s:attribute name="code" type="s:int" use="required"/>
        <s:attribute name="pos" type="s:int" use="required"/>
        <s:attribute name="row" type="s:int" use="required"/>
        <s:attribute name="col" type="s:int" use="required"/>
        <s:attribute name="len" type="s:int" use="required"/>
      </s:complexType>
      <s:element name="CheckTextsRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="unbounded" name="text" type="s:string"/>
          </s:sequence>
          <s:attribute name="lang" type="s:string"/>
          <s:attribute name="options" type="s:int" use="optional" default="0"/>
          <s:attribute name="format" type="s:string" use="optional" default=""/>
        </s:complexType>
      </s:element>
      <s:element name="CheckTextsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ArrayOfSpellResult" type="tns:ArrayOfSpellResult"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfSpellResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="SpellResult" type="tns:SpellResult"/>
        </s:sequence>
      </s:complexType>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="checkTextSoapIn">
    <wsdl:part name="parameters" element="tns:CheckTextRequest"/>
  </wsdl:message>
  <wsdl:message name="checkTextSoapOut">
    <wsdl:part name="parameters" element="tns:CheckTextResponse"/>
  </wsdl:message>
  <wsdl:message name="checkTextsSoapIn">
    <wsdl:part name="parameters" element="tns:CheckTextsRequest"/>
  </wsdl:message>
  <wsdl:message name="checkTextsSoapOut">
    <wsdl:part name="parameters" element="tns:CheckTextsResponse"/>
  </wsdl:message>
  <wsdl:portType name="SpellServiceSoap">
    <wsdl:operation name="checkText">
      <wsdl:input message="tns:checkTextSoapIn"/>
      <wsdl:output message="tns:checkTextSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="checkTexts">
      <wsdl:input message="tns:checkTextsSoapIn"/>
      <wsdl:output message="tns:checkTextsSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SpellServiceSoap" type="tns:SpellServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="checkText">
      <soap:operation soapAction="http://speller.yandex.net/services/spellservice/checkText" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="checkTexts">
      <soap:operation soapAction="http://speller.yandex.net/services/spellservice/checkTexts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SpellServiceSoap12" type="tns:SpellServiceSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="checkText">
      <soap12:operation soapAction="http://speller.yandex.net/services/spellservice/checkText" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="checkTexts">
      <soap12:operation soapAction="http://speller.yandex.net/services/spellservice/checkTexts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SpellService">
    <wsdl:port name="SpellServiceSoap" binding="tns:SpellServiceSoap">
      <soap:address location="http://speller.yandex.net/services/spellservice"/>
    </wsdl:port>
    <wsdl:port name="SpellServiceSoap12" binding="tns:SpellServiceSoap12">
      <soap12:address location="http://speller.yandex.net/services/spellservice"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint></con:endpoints><con:operation id="a80f8cb3-ede3-44e1-8256-4294f6b33371" isOneWay="false" action="http://speller.yandex.net/services/spellservice/checkText" name="checkText" bindingOperationName="checkText" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c82e6fa5-391b-449e-80c9-3cf12fe865a6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest lang="?" options="0" format="">\r
         <spel:text>?</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://speller.yandex.net/services/spellservice/checkText"/></con:call></con:operation><con:operation id="3268cf13-dcd8-4136-94b1-c30966c722fb" isOneWay="false" action="http://speller.yandex.net/services/spellservice/checkTexts" name="checkTexts" bindingOperationName="checkTexts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f2a9881e-410e-4b28-a102-94beabb4599e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextsRequest lang="?" options="0" format="">\r
         <!--Zero or more repetitions:-->\r
         <spel:text>?</spel:text>\r
      </spel:CheckTextsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://speller.yandex.net/services/spellservice/checkTexts"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8128ec60-3c0c-4e68-893f-38b58d39d7d0" wsaVersion="NONE" name="SpellServiceSoap12" type="wsdl" bindingName="{http://speller.yandex.net/services/spellservice}SpellServiceSoap12" soapVersion="1_2" anonymous="optional" definition="file:/C:/Users/alex/Downloads/spellservice.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\C:\Users\alex\Downloads\spellservice.xml"><con:part><con:url>file:\C:\Users\alex\Downloads\spellservice.xml</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://speller.yandex.net/services/spellservice" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://speller.yandex.net/services/spellservice" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://speller.yandex.net/services/spellservice">
      <s:element name="CheckTextRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="text" type="s:string"/>
          </s:sequence>
          <s:attribute name="lang" type="s:string"/>
          <s:attribute name="options" type="s:int" use="optional" default="0"/>
          <s:attribute name="format" type="s:string" use="optional" default=""/>
        </s:complexType>
      </s:element>
      <s:element name="CheckTextResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SpellResult" type="tns:SpellResult"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="SpellResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="error" type="tns:SpellError"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="SpellError">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="word" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="unbounded" name="s" type="s:string"/>
        </s:sequence>
        <s:attribute name="code" type="s:int" use="required"/>
        <s:attribute name="pos" type="s:int" use="required"/>
        <s:attribute name="row" type="s:int" use="required"/>
        <s:attribute name="col" type="s:int" use="required"/>
        <s:attribute name="len" type="s:int" use="required"/>
      </s:complexType>
      <s:element name="CheckTextsRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="unbounded" name="text" type="s:string"/>
          </s:sequence>
          <s:attribute name="lang" type="s:string"/>
          <s:attribute name="options" type="s:int" use="optional" default="0"/>
          <s:attribute name="format" type="s:string" use="optional" default=""/>
        </s:complexType>
      </s:element>
      <s:element name="CheckTextsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ArrayOfSpellResult" type="tns:ArrayOfSpellResult"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfSpellResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="SpellResult" type="tns:SpellResult"/>
        </s:sequence>
      </s:complexType>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="checkTextSoapIn">
    <wsdl:part name="parameters" element="tns:CheckTextRequest"/>
  </wsdl:message>
  <wsdl:message name="checkTextSoapOut">
    <wsdl:part name="parameters" element="tns:CheckTextResponse"/>
  </wsdl:message>
  <wsdl:message name="checkTextsSoapIn">
    <wsdl:part name="parameters" element="tns:CheckTextsRequest"/>
  </wsdl:message>
  <wsdl:message name="checkTextsSoapOut">
    <wsdl:part name="parameters" element="tns:CheckTextsResponse"/>
  </wsdl:message>
  <wsdl:portType name="SpellServiceSoap">
    <wsdl:operation name="checkText">
      <wsdl:input message="tns:checkTextSoapIn"/>
      <wsdl:output message="tns:checkTextSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="checkTexts">
      <wsdl:input message="tns:checkTextsSoapIn"/>
      <wsdl:output message="tns:checkTextsSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SpellServiceSoap" type="tns:SpellServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="checkText">
      <soap:operation soapAction="http://speller.yandex.net/services/spellservice/checkText" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="checkTexts">
      <soap:operation soapAction="http://speller.yandex.net/services/spellservice/checkTexts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SpellServiceSoap12" type="tns:SpellServiceSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="checkText">
      <soap12:operation soapAction="http://speller.yandex.net/services/spellservice/checkText" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="checkTexts">
      <soap12:operation soapAction="http://speller.yandex.net/services/spellservice/checkTexts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SpellService">
    <wsdl:port name="SpellServiceSoap" binding="tns:SpellServiceSoap">
      <soap:address location="http://speller.yandex.net/services/spellservice"/>
    </wsdl:port>
    <wsdl:port name="SpellServiceSoap12" binding="tns:SpellServiceSoap12">
      <soap12:address location="http://speller.yandex.net/services/spellservice"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint></con:endpoints><con:operation id="8b5419ab-c899-4e0c-881d-dd680c761601" isOneWay="false" action="http://speller.yandex.net/services/spellservice/checkText" name="checkText" bindingOperationName="checkText" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8ddd424b-431a-42bb-b89f-b4589e6ab004" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soap:Header/>\r
   <soap:Body>\r
      <spel:CheckTextRequest lang="?" options="0" format="">\r
         <spel:text>?</spel:text>\r
      </spel:CheckTextRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://speller.yandex.net/services/spellservice/SpellServiceSoap/checkTextRequest"/></con:call></con:operation><con:operation id="ec56a9b0-6aaf-46b9-97b9-4659ce0376e9" isOneWay="false" action="http://speller.yandex.net/services/spellservice/checkTexts" name="checkTexts" bindingOperationName="checkTexts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="91f77e70-886c-4733-9d99-12e7070624a2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soap:Header/>\r
   <soap:Body>\r
      <spel:CheckTextsRequest lang="?" options="0" format="">\r
         <!--Zero or more repetitions:-->\r
         <spel:text>?</spel:text>\r
      </spel:CheckTextsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://speller.yandex.net/services/spellservice/SpellServiceSoap/checkTextsRequest"/></con:call></con:operation></con:interface><con:testSuite id="f2fdbc28-5991-45c8-8017-910c0727d223" name="OptionsTests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5659fa46-6b99-460a-a463-a3307796f227" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="IgnoreDigitsTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" id="6549610d-7fa1-4797-b7da-301085f855ea" name="CheckIgnoreDigitsOption"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckIgnoreDigitsOption" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b347d655-6867-4a51-8a5e-0153b36e0976"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest options="2">\r
         <spel:text>${TestProperties#textWithDigits}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fc2ab5af-2627-4fc5-8b0c-3e4886fc7bd4" name="SOAP Response"/><con:assertion type="Valid HTTP Status Codes" id="af01333b-1955-4613-a8a7-a17794c42bfc" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="24a9c95d-ad00-4271-a1b3-f935e84d0e01" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" id="86004b79-bb47-42ca-86c0-7064e5674746" name="Not Contains"><con:configuration><token>${TestProperties#textWithDigits}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://speller.yandex.net/services/spellservice/checkText"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="TestProperties" id="8846a94e-bf6a-42b4-bfe5-5eb8bc7f5096"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>textWithDigits</con:name><con:value>123456tфst12345tфst</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GetTestData" id="6ad419a1-6358-4659-b4e0-57d6494d37cb"><con:settings/><con:config><script>List&lt;String> wordsWithDigits = new ArrayList&lt;>();

wordsWithDigits.add("tфst12345");
wordsWithDigits.add("12345tфst");
wordsWithDigits.add("123456tфst12345");
wordsWithDigits.add("123456tфst12345tфst");

for (int i = 0 ; i  &lt; wordsWithDigits.size; i++) {
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("textWithDigits", wordsWithDigits.getAt(i));
        	testRunner.runTestStepByName("CheckIgnoreDigitsOption");
} </script></con:config></con:testStep><con:setupScript>testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("textWithDigits", "");</con:setupScript><con:properties><con:property><con:name>text</con:name><con:value>test</con:value></con:property></con:properties></con:testCase><con:testCase id="667452e4-bfdd-4bef-a462-86a95c16b7a3" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="IgnoreUrlsTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckIgnoreUrlsOption" id="a920b563-81ee-4304-bf4a-89a86c5bda79"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckIgnoreUrlsOption" id="5e6cd3bc-fad9-425d-ac2f-c48865c146b8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest options="4">\r
         <spel:text>${TestProperties#textWithUrls}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a243d422-602d-4ccf-aac9-c8c620a0cfbc"/><con:assertion type="Simple NotContains" id="80f21ec6-4db7-429c-b3d5-92646bf889ee" name="Not Contains"><con:configuration><token>${#Project#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="3d330983-b906-46e8-b8f9-388c47777d21" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="dcfcd736-1274-4886-a34b-2c64d7b328e1" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="TestProperties" id="547d601d-8384-46cb-a1d7-13109010bd15"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>textWithUrls</con:name><con:value>epam.comtфstepam.comtфst</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GetTestData" id="67d3d94c-89bd-420e-9586-93a2d4df1775"><con:settings/><con:config><script>List&lt;String> wordsWithUrls = new ArrayList&lt;>();

wordsWithUrls.add("tфsepam.com");
wordsWithUrls.add("epam.comtфst");
wordsWithUrls.add("epam.comtфstepam.com");
wordsWithUrls.add("epam.comtфstepam.comtфst");

for (int i = 0 ; i  &lt; wordsWithUrls.size; i++) {
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("textWithUrls", wordsWithUrls.getAt(i));
        	testRunner.runTestStepByName("CheckIgnoreUrlsOption");
}</script></con:config></con:testStep><con:setupScript>testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("textWithUrls", "");</con:setupScript><con:properties/></con:testCase><con:testCase id="5118d77d-ea79-465f-97e3-c8efe9d52c7c" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FindRepeatWordTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckHighlightingDuplicatesOption" id="67ba3259-fca0-41d0-aa3a-34ec90e946bd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckHighlightingDuplicatesOption" id="72c25b0f-64e5-4c81-82f1-9c3715d70742"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">
   <soapenv:Header/>
   <soapenv:Body>
      <spel:CheckTextRequest options="8">
         <spel:text>${TestProperties#textWithDuplicates}</spel:text>
      </spel:CheckTextRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d42829cc-077b-4db9-86e3-5dec0ae4a216"/><con:assertion type="Valid HTTP Status Codes" id="9bc431bd-5b0f-4820-a09f-47508de9149f" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="143815ec-7469-47b1-98a9-c93c7c2229f4" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="5468bb90-e5bb-47a2-a83a-c520b09a7960" name="Contains"><con:configuration><token>${#Project#errorRepeatWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="TestProperties" id="35d7e31a-0fda-4cb6-829f-9cc351437323"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>textWithDuplicates</con:name><con:value>lets go go</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GetTestData" id="db9a5b20-fb35-4844-8f37-9e0bb5c52265"><con:settings/><con:config><script>List&lt;String> wordsWithDuplicates = new ArrayList&lt;>();

wordsWithDuplicates.add("я полетел на на Кипр");
wordsWithDuplicates.add("lets go go");

for (int i = 0 ; i  &lt; wordsWithDuplicates.size; i++) {
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("textWithDuplicates", wordsWithDuplicates.getAt(i));
        	testRunner.runTestStepByName("CheckHighlightingDuplicatesOption");
}</script></con:config></con:testStep><con:setupScript/><con:properties/></con:testCase><con:testCase id="c1cf34bd-439c-487f-bcee-70ce78806c0c" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="IgnoreCapitalizationTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckIgnoreCapitlizationOption" id="2cd83dea-f566-408e-9b5e-1530b40cbf8f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckIgnoreCapitlizationOption" id="de3849ec-b076-4e6d-aa99-12f73c658761"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest options="512">\r
         <spel:text>${TestProperties#textWithWrongCapitalization}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fc072190-00bc-4ddd-9269-9b106afa902f"/><con:assertion type="Valid HTTP Status Codes" id="1ec6e7f4-3a8b-48f9-9991-c2a0367ffda7" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="b14bc559-a3ea-43d5-ab3c-73a2a9e5eb84" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" id="9210d004-7cd8-4b1d-a6f3-a6c0bf0f8b90" name="Not Contains"><con:configuration><token>${#Project#errorCapitalization}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="TestProperties" id="468311f0-1d33-438d-98b5-f13adafc0a69"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>textWithWrongCapitalization</con:name><con:value>КаРандАШ</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GetTestData" id="e7ad3abe-5759-4de2-a562-9582a4ed6c5a"><con:settings/><con:config><script>List&lt;String> wordsWithWrongCapitalization = new ArrayList&lt;>();

wordsWithWrongCapitalization.add("москва");
wordsWithWrongCapitalization.add("ИВАН");
wordsWithWrongCapitalization.add("КаРандАШ");

for (int i = 0 ; i  &lt; wordsWithWrongCapitalization.size; i++) {
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("textWithWrongCapitalization", wordsWithWrongCapitalization.getAt(i));
        	testRunner.runTestStepByName("CheckIgnoreCapitlizationOption");
}</script></con:config></con:testStep><con:setupScript>testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("textWithWrongCapitalization", "");</con:setupScript><con:properties/></con:testCase><con:properties/><con:setupScript/></con:testSuite><con:testSuite id="45e2bad7-5528-4d24-bc32-394e0f1cc2d2" name="ErrorsTests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6f9f66e6-25f3-4e85-8d77-41320574dc9a" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UnknownWordTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckUnknownWordError" id="96ea20e0-c51c-4eda-93c4-27f91f267b5a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckUnknownWordError" id="527b5b0d-d26f-4d91-b558-062d7517df86"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest lang="en">\r
         <spel:text>${#TestCase#unknownWord}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6ce99ef7-e8cd-47a3-8eec-ac49c366c1c8"/><con:assertion type="SOAP Fault Assertion" id="81eae24c-d712-4106-91e6-009202113376" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="c9d6ce3b-4e5a-4119-afc8-4d036f3e7e56" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="d32096fc-8958-496b-ae0a-446d9ad20746" name="XPath Match "><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:word</path><content>${#TestCase#unknownWord}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5aec198c-aad3-4489-bb23-9beeb321c871" name="Contains"><con:configuration><token>${#Project#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>unknownWord</con:name><con:value>tabrus</con:value></con:property></con:properties></con:testCase><con:testCase id="bc7d3af1-1cd2-46d9-a6b7-700de4ff5c30" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CapitalizationTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckCapitalizationError" id="cfdba3a3-9f6d-459c-ac62-6bcd337e5527"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckCapitalizationError" id="d6e2b6d3-5a74-4f30-bc73-6a1b96c1c870"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest>\r
         <spel:text>${#TestCase#wrongCapitalization}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cb78a671-e3c8-478b-9789-746d1fccf248"/><con:assertion type="Valid HTTP Status Codes" id="8bba2016-7b64-41ed-9d41-0a7a89187bc4" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="4317e1ef-d27c-4131-9169-a7362cde3232" name="XPath Match"><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:word</path><content>${#TestCase#wrongCapitalization}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="2e290cc6-046b-4bd0-a044-c330a82d6a72" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="d0bd8c2a-c9f8-475c-93c6-87b48797eefe" name="Contains"><con:configuration><token>${#Project#errorerrorCapitalization}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>wrongCapitalization</con:name><con:value>moscow</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="de209b0b-72b5-403e-9cd9-08b78a7fa43a" name="LanguageTests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b13582fd-08cb-40bf-9a13-51bc9050c844" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RussianLangTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckWithValidText" id="af3b3c32-689a-4997-9459-bf723e16ebc9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckWithValidText" id="6580e2ba-7b31-4567-8fde-ecd6c1e74cb5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest lang="ru">\r
         <spel:text>${#TestCase#validRussianText}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3d59b24b-05e9-4288-b8f7-53fcf963968d"/><con:assertion type="SOAP Fault Assertion" id="a94d52ef-475e-464b-9a85-a63e50686194" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="b32410e9-fdf3-4e14-930f-0682915e6e48" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="206d4bed-1cdc-463f-8154-f93618cc214c" name="XPath Match"><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:word</path><content>${#TestCase#validRussianText}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cdf8be1c-1945-484e-89ef-3bcb799b1ec8" name="Contains"><con:configuration><token>${#Project#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CheckWithNotValidText" id="ffe6fc37-c261-4cf5-a0f8-1a52f25cb1d9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckWithNotValidText" id="a0e9452c-871c-49e1-9377-8beb4ec2d5f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest lang="ru">\r
         <spel:text>${TestProperties#notValidText}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9a1f8895-6cbf-4248-bcf1-b10540e75cf8"/><con:assertion type="SOAP Fault Assertion" id="c8717ca8-523d-4691-ab75-da38e762218c" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="060d72f1-733a-4eb5-b562-664af0690d71" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="20cde3a5-e845-4ba9-a303-a442d648688b" name="XPath Match"><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:SpellResult</path><content>&lt;SpellResult xmlns="http://speller.yandex.net/services/spellservice" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"/></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="90699ec2-382f-4f28-9484-c4f2bedb51b6" name="Contains"><con:configuration><token>${#Project#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="TestProperties" id="4995e73d-298b-49ef-a21f-e08e7f029aa2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>notValidText</con:name><con:value>привіт </con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GetTestData" id="ff8dc32c-1f5e-4c93-85b7-ed7497c437fe"><con:settings/><con:config><script>List&lt;String> notValidTexts = new ArrayList&lt;>();

notValidTexts.add("timato");
notValidTexts.add("привіт ");

for (int i = 0 ; i  &lt; notValidTexts.size; i++) {
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("notValidText", notValidTexts.getAt(i));
        	testRunner.runTestStepByName("CheckWithNotValidText");
}</script></con:config></con:testStep><con:setupScript>testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("notValidText", "");</con:setupScript><con:properties><con:property><con:name>validRussianText</con:name><con:value>марковь</con:value></con:property></con:properties></con:testCase><con:testCase id="155b0ac1-99ec-4b32-9cfe-6971ea1ae469" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EnglishLangTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckWithValidText" id="a2f7f599-92d1-478d-ab94-78e5ae1c030c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckWithValidText" id="439e6add-031c-4bbf-abeb-c80224c5c0e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest lang="en">\r
         <spel:text>${#TestCase#validEnglishText}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1afe9f4f-b207-4f18-a25f-f2191957c54b"/><con:assertion type="SOAP Fault Assertion" id="cab65a3a-4da7-4879-a0b1-9ec154e86d30" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="411542ce-6a37-4521-9511-3b300332e283" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="5e49dbe3-041d-4adf-87ac-ddb48e283e97" name="XPath Match"><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:word</path><content>${#TestCase#validEnglishText}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c614ba66-106a-48b9-b69c-6c37c666bfef" name="Contains"><con:configuration><token>${#Project#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CheckWithNotValidText" id="8c3c4a68-6018-4384-9351-250f79414a50"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckWithNotValidText" id="284bb764-cad4-4220-b4a4-7e50fcc0f1a7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest lang="en">\r
         <spel:text>${TestProperties#notValidText}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b9498edd-6dab-4fd3-8107-e05e12249b2e"/><con:assertion type="Valid HTTP Status Codes" id="5a89c50f-a404-4740-9c1c-97e915caf059" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="9d80f061-7ffa-4358-b883-e8032fa46bf8" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="a3a1d6de-4fb2-4316-bd7e-6f3b26a06763" name="XPath Match"><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:SpellResult</path><content>&lt;SpellResult xmlns="http://speller.yandex.net/services/spellservice" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"/></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="914e2cbd-b7e4-4225-8e1f-bba22a221de3" name="Not Contains"><con:configuration><token>${#Global#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="TestProperties" id="7195b8c8-2a31-4ca6-9485-8e1165b14437"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>notValidText</con:name><con:value>привіт </con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GetTestData" id="02e9840b-6e16-4537-892b-0b3e92ee62ce"><con:settings/><con:config><script>List&lt;String> notValidTexts = new ArrayList&lt;>();

notValidTexts.add("марковь");
notValidTexts.add("привіт ");

for (int i = 0 ; i  &lt; notValidTexts.size; i++) {
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("notValidText", notValidTexts.getAt(i));
        	testRunner.runTestStepByName("CheckWithNotValidText");
}</script></con:config></con:testStep><con:setupScript>testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("notValidText", "");</con:setupScript><con:properties><con:property><con:name>validEnglishText</con:name><con:value>tpmato</con:value></con:property></con:properties></con:testCase><con:testCase id="bacd06c1-dc5e-4f3e-8250-d98b3472e6d9" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UkrainianLangTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckWithValidText" id="aff1c71d-9f40-4522-862d-08912da441d3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckWithValidText" id="14e50691-bfce-43f5-9ff0-2ac4289de3d9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest lang="uk">\r
         <spel:text>${#TestCase#validUkrainianText}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="62c08f19-c4a0-452d-a0b0-0425101a4df0"/><con:assertion type="SOAP Fault Assertion" id="d0aa48a7-023b-4b70-9a3a-5b76aff16b91" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="8db8f57a-81c1-48f4-b84f-43ca2dc9c38b" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="c291bd6c-7ef3-4fb1-9150-0891a9f4d4b5" name="XPath Match"><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:word</path><content>${#TestCase#validUkrainianText}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f661c719-c8d1-4f0a-8a92-6541348662b4" name="Contains"><con:configuration><token>${#Project#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CheckWithNotValidText" id="0bffad66-193f-4ee4-b344-7a10c3b9fa9f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckWithNotValidText" id="cbb64a9e-db9f-4dd9-8e86-6b0781b385ae"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <spel:CheckTextRequest lang="uk">\r
         <spel:text>${TestProperties#notValidText}</spel:text>\r
      </spel:CheckTextRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="369ca513-5c88-4421-bd54-d23cef60b1eb"/><con:assertion type="SOAP Fault Assertion" id="a33a33af-95a6-4d2e-92b6-a28bc006b348" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="daca0ca9-aaa0-4a2a-8d73-2ccb6d7bbe66" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="dcdb77f7-39b5-4856-ba8d-539607992ec9" name="XPath Match"><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:SpellResult</path><content>&lt;SpellResult xmlns="http://speller.yandex.net/services/spellservice" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"/></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="4372c3d7-e619-4bdd-b2c8-02a155478ea0" name="Not Contains"><con:configuration><token>${#Project#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="TestProperties" id="09a9668c-f5c8-4195-a4d9-ce4fc3bf0f58"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>notValidText</con:name><con:value>tpmato </con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GetTestData" id="349c306d-d84f-438f-aaf3-508a4096f209"><con:settings/><con:config><script>List&lt;String> notValidTexts = new ArrayList&lt;>();

notValidTexts.add("марковь");
notValidTexts.add("tpmato ");

for (int i = 0 ; i  &lt; notValidTexts.size; i++) {
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("notValidText", notValidTexts.getAt(i));
        	testRunner.runTestStepByName("CheckWithNotValidText");
}</script></con:config></con:testStep><con:setupScript>testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("notValidText", "");</con:setupScript><con:properties><con:property><con:name>validUkrainianText</con:name><con:value>прiвет</con:value></con:property></con:properties></con:testCase><con:testCase id="f9f700e0-fe3b-4321-9d81-e15aeebdaa8f" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DefaultLanguageTest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="CheckDefaultLanguage" id="c1b0f55c-d76e-429a-80af-966556a4d0db"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpellServiceSoap</con:interface><con:operation>checkText</con:operation><con:request name="CheckDefaultLanguage" id="a1c98eef-d8af-4963-afa5-87f3ce120c11"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://speller.yandex.net/services/spellservice</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spel="http://speller.yandex.net/services/spellservice">
   <soapenv:Header/>
   <soapenv:Body>
      <spel:CheckTextRequest>
         <spel:text>${TestProperties#textInRequest}</spel:text>
      </spel:CheckTextRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c57fbbf6-680b-4d39-b45c-02b20ccf201c"/><con:assertion type="SOAP Fault Assertion" id="a516899f-d588-45eb-a033-b56ccab4cab9" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="0afd642a-900e-4d3a-8de3-11d1080d490c" name="Valid HTTP Status Codes"><con:configuration><codes>${#Global#successStatusCode}</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="56646d79-4c52-4cc6-a984-16e8ffd55a98" name="XPath Match"><con:configuration><path>declare namespace ns1='http://speller.yandex.net/services/spellservice';
//ns1:s</path><content>${TestProperties#expectedResult}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="412fd507-8e05-4040-8526-4dadb3c6beec" name="Contains"><con:configuration><token>${#Project#errorUnknownWord}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="TestProperties" id="13e9b5a2-7e95-4c7e-9eba-08e90081cc06"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>textInRequest</con:name><con:value>browd</con:value></con:property><con:property><con:name>expectedResult</con:name><con:value>brown</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="GetTestData" id="e27b6052-29ab-4824-b8b7-5db3e9e80a4b"><con:settings/><con:config><script>List&lt;String> textInRequest = new ArrayList&lt;>();
textInRequest.add("марковь");
textInRequest.add("browd");

List&lt;String> expectedResult = new ArrayList&lt;>();
expectedResult.add("морковь");
expectedResult.add("brown");

for (int i = 0; i  &lt; textInRequest.size; i++) {
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("textInRequest", textInRequest.getAt(i));
        	testRunner.testCase.getTestStepByName("TestProperties").setPropertyValue("expectedResult", expectedResult.getAt(i));
        	testRunner.runTestStepByName("CheckDefaultLanguage");
} </script></con:config></con:testStep><con:setupScript/><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>errorUnknownWord</con:name><con:value>error code="1"</con:value></con:property><con:property><con:name>errorRepeatWord</con:name><con:value>error code="2"</con:value></con:property><con:property><con:name>errorCapitalization</con:name><con:value>error code="3"</con:value></con:property></con:properties><con:afterLoadScript>com.eviware.soapui.SoapUI.globalProperties.setPropertyValue( "successStatusCode", "200")</con:afterLoadScript><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>